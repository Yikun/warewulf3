# Terminate specfile builds on unrecognized or unsupported OS to avoid
# unexpected errors. This is easily overridden by setting the appropriate
# macro (rhel, suse_version) on the rpmbuild command line.
# For example, if using Fedora 20 to 27, "--define rhel 7"
%if 0%{!?rhel:1} && 0%{?rhel_version:1}
%global rhel %{rhel_version}
%endif
%if 0%{?rhel:1} && 0%{?rhel} >= 7
# RHEL >= 7.0 found; continue
%else
%if 0%{?suse_version:1} && 0%{?suse_version} >= 1500
# Suse >= 15.0 found; continue
%else
%{error: "Detected operating system is not supported."}
%endif # suse_version
%endif # rhel

# Defining both would have unpredictable results.
%if 0%{?rhel:1} && 0%{?suse_version:1}
%{error: "Both rhel and suse_version macros defined. Only one is allowed."}
%endif

%{!?_rel:%{expand:%%global _rel 0.%(test "@GITVERSION@" != "0000" && echo "@GITVERSION@" || git show -s --pretty=format:%h || echo 0000)}}
%define debug_package %{nil}
%{!?wwsrvdir:%{expand:%%define wwsrvdir %{_sharedstatedir}}}

Name: warewulf-common
Version: @PACKAGE_VERSION@
Release: %{_rel}%{?dist}
Summary: Scalable systems management suite for high performance clusters
License: US Dept. of Energy (BSD-like)
URL: http://warewulf.lbl.gov/
Source: %{name}-%{version}.tar.gz
ExclusiveOS: linux
Conflicts: warewulf < 3
BuildArch: noarch
BuildRequires: autoconf, automake
Requires: perl(DBD::mysql), perl(DBD::Pg), perl(DBD::SQLite), perl(JSON::PP)

%if 0%{?rhel:1} || 0%{?suse_version} >= 1500
%global sql_name mariadb
%global daemon_name mariadb
%else
%global sql_name mysql
%global daemon_name mysqld
%endif

%if 0%{?rhel} >= 8
BuildRequires: systemd
%endif
%if 0%{?suse_version:1}
BuildRequires: systemd-rpm-macros
%endif

Requires: %sql_name

%description
Warewulf is an operating system management toolkit designed to facilitate
large scale deployments of systems on physical, virtual and cloud-based
infrastructures. It facilitates elastic and large deployments consisting
of groups of homogenous systems.

Warewulf Common contains the core functionality of Warewulf. It provides
the base libraries that are shared and utilized by the other Warewulf
modules as well as the backend data store interface, event and trigger
handlers and a basic command line interface.


%prep
%setup -q


%build
WAREWULF_STATEDIR=%{wwsrvdir}
%configure --sharedstatedir=%{wwsrvdir}
%{__make} %{?mflags}


%install
%{__make} install DESTDIR=$RPM_BUILD_ROOT %{?mflags_install}


%pre
/usr/sbin/groupadd -r warewulf >/dev/null 2>&1 || :


%post
# Canonicalize on upgrade, before old package is removed
if [ $1 -gt 1 ] ; then
    %{_bindir}/wwsh object canonicalize -t node >/dev/null 2>&1 || :
    %{_bindir}/wwsh object canonicalize -t file >/dev/null 2>&1 || :
fi


%files
%defattr(-, root, root)
%doc AUTHORS ChangeLog INSTALL NEWS README TODO
%license COPYING LICENSE
%attr(0755, root, warewulf) %dir %{_sysconfdir}/warewulf/
%attr(0755, root, warewulf) %dir %{_sysconfdir}/warewulf/defaults/
%attr(0444, root, warewulf) %{_libexecdir}/warewulf/wwinit/functions
%attr(0644, root, root) %{_sysconfdir}/bash_completion.d/warewulf_completion
%attr(0644, root, warewulf) %config(noreplace) %{_sysconfdir}/warewulf/database.conf
%attr(0640, root, warewulf) %config(noreplace) %{_sysconfdir}/warewulf/database-root.conf
%attr(0644, root, warewulf) %config(noreplace) %{_sysconfdir}/warewulf/defaults/node.conf
%{_mandir}/*
%{_bindir}/*
%{_datadir}/warewulf/
%{_libexecdir}/warewulf/wwinit
%{perl_vendorlib}/*


# ====================
%package localdb
Summary: Warewulf - Install local database server
Requires: %{sql_name}-server

%description localdb
Warewulf is an operating system management toolkit designed to facilitate
large scale deployments of systems on physical, virtual and cloud-based
infrastructures. It facilitates elastic and large deployments consisting
of groups of homogenous systems.

This metapackage installs a local MySQL or MariaDB instance. It is not
required for installs that will use an external database server.

By default, removing this package will not remove or disable the installed
SQL server.

%post localdb
# Start services on install.
# For upgrades or removal, restart after the old package is removed.
if [ $1 -eq 1 ] ; then
%if 0%{?suse_version:1} || 0%{?rhel} >= 8
%systemd_post %{daemon_name}.service
%else
/usr/bin/systemctl --no-reload preset %{daemon_name}.service  &> /dev/null || :
%endif

/usr/bin/systemctl reenable %{daemon_name}.service &> /dev/null || :
/usr/bin/systemctl restart %{daemon_name}.service  &> /dev/null || : 
fi

%postun localdb
%if 0%{?suse_version:1} || 0%{?rhel} >= 8
%systemd_postun_with_restart %{daemon_name}.service
%else
/usr/bin/systemctl try-restart %{daemon_name}.service  &> /dev/null || :
%endif

%files localdb
%defattr(-, root, root)


# ====================
%changelog
